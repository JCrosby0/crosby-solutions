backend:
  name: git-gateway
  repo: crosby-solutions-content
  branch: master # Branch to update (optional; defaults to master)

# CMS customisation setup
site_url: https://crosby.solutions # for previews
display_url: https://crosby.solutions # for linking back to the site
logo_url: https://crosby.solutions/images/cs-logo-two-line.png # TODO find a static link to an image

# uses pull requests to set up a draft mode kanban style board for drafts, review and publish
publish_mode: editorial_workflow

# where should content go
media_folder: 'images/uploads' # Media files will be stored in the repo under images/uploads
# check that this isn't going to mess up with content being a submodule?
# media_folder: "static/images/uploads" # Media files will be stored in the repo under static/images/uploads
public_folder: '/images/uploads' # The src attribute for uploaded media will begin with /images/uploads

collections:
  - name: 'articles' # Used in routes, e.g., /admin/collections/blog
    label: 'Articles' # Used in the UI
    folder: 'content/articles' # The path to the folder where the documents are stored
    create: true # Allow users to create new documents in this collection
    slug: '{{year}}-{{month}}-{{day}}-{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md
    fields: # The fields for each document, usually in front matter
      - { label: 'Layout', name: 'layout', widget: 'hidden', default: 'blog' }
      - { label: 'Title', name: 'title', widget: 'string' }
      - { label: 'Description', name: 'description', widget: 'string' }
      - { label: 'Publish Date', name: 'date', widget: 'datetime' }
      - { label: 'Featured Image', name: 'logo', w  idget: 'image' }
      - { label: 'Body', name: 'body', widget: 'markdown' }
  - name: 'proposals' # Used in routes, e.g., /admin/collections/blog
    label: 'Proposals' # Used in the UI
    folder: 'content/clients' # The path to the folder where the documents are stored
    create: true # Allow users to create new documents in this collection
    slug: '{{slug}}' # Filename template, e.g., YYYY-MM-DD-title.md
    fields: # The fields for each document, usually in front matter
      - {
          label: 'Layout',
          name: 'layout',
          widget: 'hidden',
          default: 'default',
        }
      - { label: 'Title', name: 'title', widget: 'string' }
      - { label: 'Author', name: 'author', widget: 'string' }
      - { label: 'Client Logo', name: 'logo', widget: 'image' }
      - { label: 'Body', name: 'body', widget: 'markdown' }
  - name: 'json' # Used in routes, e.g., /admin/collections/blog
    label: 'JSON' # Used in the UI
    extension: 'json'
    folder: 'content/json' # The path to the folder where the documents are stored
    editor-preview: 'false'
    files:
      - file: 'about.json' # The path to the folder where the documents are stored
        label: 'About'
        name: 'about'
        fields:
          - { name: body, content: list, widget: code }
          #title: body, para: body,
      - file: 'clients.json' # The path to the folder where the documents are stored
        label: 'Clients'
        name: 'clients'
        fields:
          - { name: body, content: list, widget: code }
            #img: body, link: body, widget: code }
      - file: 'features.json' # The path to the folder where the documents are stored
        label: 'Features'
        name: 'features'
        fields:
          - { name: body, content: list, widget: code }
      - file: 'social.json' # The path to the folder where the documents are stored
        label: 'Social'
        name: 'social'
        fields:
          - { name: body, content: list, widget: code }
      - file: 'solutions.json' # The path to the folder where the documents are stored
        label: 'Solutions'
        name: 'solutions'
        fields:
          - { name: body, content: list, widget: code }
      - file: 'tech.json' # The path to the folder where the documents are stored
        label: 'Tech'
        name: 'tech'
        fields:
          - { name: body, content: list, widget: code }
